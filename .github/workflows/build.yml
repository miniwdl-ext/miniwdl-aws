name: build
on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: deps
      run: sudo pip3 install --system pre-commit black flake8 pylint
    - name: pre-commit
      run: pre-commit run --all-files

  ghcr_image:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: docker login ghcr.io
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    - name: docker_build
      run: |
        REPO="ghcr.io/miniwdl-ext/miniwdl-aws"
        TAG="$(git describe --long --tags --always --dirty)"

        docker pull public.ecr.aws/amazonlinux/amazonlinux:2
        docker build -t "${REPO}:${TAG}" .
        IMAGE_ID="$(docker inspect ${REPO}:${TAG} | jq -r .[0].Id)"

        docker push "${REPO}:${TAG}"
        REPO_DIGEST="$(docker inspect ${REPO}:${TAG} | jq -r '.[0].RepoDigests[0]')"

        echo "REPO=${REPO}" >> $GITHUB_ENV
        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo "IMAGE_ID=${IMAGE_ID}" >> $GITHUB_ENV
        echo "REPO_DIGEST=${REPO_DIGEST}" >> $GITHUB_ENV
    - name: display
      run: |
        >&2 echo "Id: ${IMAGE_ID}"  
        echo "::set-output name=Id::${REPO}:${IMAGE_ID}"
        >&2 echo "Tag: ${REPO}:${TAG}"
        echo "::set-output name=Tag::${REPO}:${TAG}"
        >&2 echo "RepoDigest: ${REPO_DIGEST}"
        echo "::set-output name=RepoDigest::${REPO_DIGEST}"        
    outputs:
      Id: ${{steps.display.outputs.Id}}
      Tag: ${{steps.display.outputs.Tag}}
      RepoDigest: ${{steps.display.outputs.RepoDigest}}
